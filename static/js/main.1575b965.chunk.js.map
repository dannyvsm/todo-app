{"version":3,"sources":["components/TodoForm.js","components/Todo.js","components/TodoList.js","App.js","index.js"],"names":["TodoForm","props","useState","input","setInput","className","onSubmit","e","preventDefault","id","Math","floor","random","text","type","placeholder","value","name","onChange","target","Todo","todos","completeTodo","removeTodo","map","todo","index","isComplete","onClick","TodoList","setTodos","test","newTodos","updatedTodos","removeArr","filter","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0LAmCeA,MAjCf,SAAkBC,GACd,MAA0BC,mBAAS,IAAnC,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OACI,uBAAMC,UAAU,YAAYC,SAZX,SAAAC,GACjBA,EAAEC,iBAEFP,EAAMK,SAAS,CACXG,GAAIC,KAAKC,MAAsB,IAAhBD,KAAKE,UACpBC,KAAMV,IAGVC,EAAS,KAIT,UACI,uBACIU,KAAK,OACLC,YAAY,gBACZC,MAAOb,EACPc,KAAK,OACLZ,UAAU,aACVa,SAvBS,SAAAX,GACjBH,EAASG,EAAEY,OAAOH,UAwBd,wBAAQX,UAAU,WAAlB,qB,OCMGe,MAhCf,YAAkD,IAAnCC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,aAAcC,EAAa,EAAbA,WAMhC,OAAOF,EAAMG,KAAI,SAACC,EAAMC,GAAP,OACb,sBACIrB,UAAWoB,EAAKE,WAAa,oBAAsB,WADvD,UAII,qBAAmBC,QAAS,kBAAMN,EAAaG,EAAKhB,KAApD,SACKgB,EAAKZ,MADAY,EAAKhB,IAIf,qBAAKJ,UAAU,QAAf,SACI,cAAC,IAAD,CACIuB,QAAS,kBAAML,EAAWE,EAAKhB,KAC/BJ,UAAU,oBATbqB,OCgCFG,MAzCf,WACI,MAA0B3B,mBAAS,IAAnC,mBAAOmB,EAAP,KAAcS,EAAd,KA8BA,OACI,gCACI,kEAEA,cAAC,EAAD,CAAUxB,SAhCF,SAAAmB,GACZ,GAAKA,EAAKZ,OAAQ,QAAQkB,KAAKN,EAAKZ,MAApC,CAIA,IAAMmB,EAAQ,CAAIP,GAAJ,mBAAaJ,IAE3BS,EAASE,OA0BL,cAAC,EAAD,CAAMX,MAAOA,EAAOC,aAjBP,SAAAb,GACjB,IAAIwB,EAAeZ,EAAMG,KAAI,SAAAC,GAIzB,OAHIA,EAAKhB,KAAOA,IACZgB,EAAKE,YAAcF,EAAKE,YAErBF,KAGXK,EAASG,IAS2CV,WAvBrC,SAAAd,GACf,IAAMyB,EAAY,YAAIb,GAAOc,QAAO,SAAAV,GAAI,OAAKA,EAAKhB,KAAOA,KAEzDqB,EAASI,UCRFE,MATf,WACE,OACE,qBAAK/B,UAAU,WAAf,SAEE,cAAC,EAAD,OCHNgC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1575b965.chunk.js","sourcesContent":["import React, {useState} from 'react'\r\n\r\nfunction TodoForm(props) {\r\n    const [input, setInput] = useState('')\r\n\r\n    const handleChange = e => {\r\n        setInput(e.target.value)\r\n    }\r\n    \r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random() * 10000),\r\n            text: input\r\n        });\r\n\r\n        setInput('')\r\n    };\r\n\r\n    return (\r\n        <form className='todo-form' onSubmit={handleSubmit}>\r\n            <input\r\n                type='text'\r\n                placeholder='add your todo'\r\n                value={input}\r\n                name='text'\r\n                className='todo-input'\r\n                onChange={handleChange}\r\n            />\r\n            <button className='todo-btn'>add</button>\r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n","import React, { useState } from 'react'\r\nimport { RiDeleteBack2Line } from 'react-icons/ri'\r\nimport { FiEdit2 } from 'react-icons/fi'\r\n\r\nfunction Todo({todos, completeTodo, removeTodo}) {\r\n    // const [edit, setEdit] = useState({\r\n    //     id: null,\r\n    //     value: ''\r\n    // })\r\n\r\n    return todos.map((todo, index) => (\r\n        <div\r\n            className={todo.isComplete ? 'todo-row complete' : 'todo-row'}\r\n            key={index}\r\n        >\r\n            <div key={todo.id} onClick={() => completeTodo(todo.id)}>\r\n                {todo.text}\r\n            </div>\r\n\r\n            <div className=\"icons\">\r\n                <RiDeleteBack2Line\r\n                    onClick={() => removeTodo(todo.id)}\r\n                    className='delete-icon'\r\n                />\r\n                {/* <FiEdit2\r\n                    onClick={() => setEdit({ id: todo.id, value: todo.text})}\r\n                    className='edit-icon'\r\n                /> */}\r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    ))\r\n}\r\n\r\nexport default Todo\r\n","import React, { useState } from 'react'\r\nimport TodoForm from './TodoForm'\r\nimport Todo from './Todo'\r\n\r\nfunction TodoList() {\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = todo => {\r\n        if (!todo.text || /^\\s*$/.test(todo.text)) {\r\n            return;\r\n        }\r\n\r\n        const newTodos = [todo, ...todos];\r\n\r\n        setTodos(newTodos);\r\n    };\r\n\r\n    const removeTodo = id => {\r\n        const removeArr = [...todos].filter(todo  => todo.id !== id)\r\n\r\n        setTodos(removeArr);\r\n    }\r\n\r\n    const completeTodo = id => {\r\n        let updatedTodos = todos.map(todo => {\r\n            if (todo.id === id) {\r\n                todo.isComplete = !todo.isComplete\r\n            }\r\n            return todo\r\n        })\r\n\r\n        setTodos(updatedTodos)\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>what would you like to do today?\r\n            </h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo}/>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n","import './App.css';\nimport TodoList from './components/TodoList';\n\nfunction App() {\n  return (\n    <div className=\"todo-app\">\n\n      <TodoList />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}